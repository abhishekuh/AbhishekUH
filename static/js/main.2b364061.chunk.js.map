{"version":3,"sources":["components/contact.js","components/home.js","components/projects.js","App.js","serviceWorker.js","index.js"],"names":["contact","className","Component","home","projects","App","basename","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sTAEqBA,E,iLAEb,OACI,6BACI,yBAAKC,UAAU,+CACX,yBAAKA,UAAU,sBACX,0BAAMA,UAAU,mBAAhB,cACA,yBAAKA,UAAU,MAAK,uBAAGA,UAAU,4BAAjC,oBACA,yBAAKA,UAAU,MAAK,uBAAGA,UAAU,2BAAjC,kC,GARaC,aCAhBC,E,iLAEb,OACI,6BACQ,yBAAKF,UAAU,8CACX,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,WAAhB,2BAEJ,yBAAKA,UAAU,eACf,0BAAMA,UAAU,WAAhB,wB,GATUC,aCCbE,E,iLAEb,OACI,6BACI,yBAAKH,UAAU,kBACX,yBAAKA,UAAU,gCACX,0BAAMA,UAAU,mBAAhB,YACA,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gBACP,yBAAKA,UAAU,gBAGf,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,gBAAf,0DAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,6BAGf,yBAAKA,UAAU,gBAAf,SACA,yBAAKA,UAAU,gBAAf,0EAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,6BAGf,yBAAKA,UAAU,gBAAf,UACA,yBAAKA,UAAU,gBAAf,qDAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gBAGf,yBAAKA,UAAU,gBAAf,uBACA,yBAAKA,UAAU,gBAAf,+D,GAlCMC,aCsCvBG,MAlCf,WACI,OACI,kBAAC,IAAD,CAAYC,SAAS,KACjB,6BACI,yBAAKL,UAAU,kDACf,0BAAMA,UAAU,yBAAwB,0BAAMA,UAAU,cAAhB,0BACpC,4BAAQA,UAAU,iBAAiBM,KAAK,SAASC,cAAY,WAAWC,cAAY,aAChFC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC3D,0BAAMX,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BY,GAAG,aACzC,wBAAIZ,UAAU,wBACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,aAAaa,GAAG,SAAhC,SAEJ,wBAAIb,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,aAAaa,GAAG,aAAhC,aAEJ,wBAAIb,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,aAAaa,GAAG,YAAhC,eAKhB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,WAAWC,UAAWjB,IAClC,kBAAC,IAAD,CAAOgB,KAAK,QAAQC,UAAWd,IAC/B,kBAAC,IAAD,CAAOa,KAAK,YAAYC,UAAWb,OCtB/Bc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.2b364061.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"main-container container-height flex-middle\">\r\n                    <div className=\"banner text-center\">\r\n                        <span className=\"banner-main-txt\">Contact Me</span>\r\n                        <div className=\"p1\"><i className=\"fas fa-phone-square-alt\"></i> +91 99010 61010</div>\r\n                        <div className=\"p1\"><i className=\"fas fa-envelope-square\"></i> abhishekuh94@gmail.com</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <div className=\"img-container container-height text-center\">\r\n                        <div className=\"banner-main-txt\">\r\n                            <span className=\"text-bg\">Abhishek Harapanahalli</span>\r\n                            </div>\r\n                        <div className=\"banner-text\">\r\n                        <span className=\"text-bg\">Web Developer</span>\r\n                        </div>\r\n                    </div>\r\n                {/* <div className=\"white-container container-height\">\r\n                    download resume\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import Logo from '../assets/angular.png'\r\n\r\nexport default class projects extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"main-container\">\r\n                    <div className=\"projects-heading text-center\">\r\n                        <span className=\"banner-main-txt\">Projects</span>\r\n                        <div className=\"project-container\">\r\n                        <div className=\"project-card\">\r\n                                <div className=\"project-img\">\r\n                                    {/* <img src=\"{Logo}\" alt=\"image\"></ img> */}\r\n                                </div>\r\n                                <div className=\"project-name\">CloseVille</div>\r\n                                <div className=\"project-desc\">Order management application for real estate business</div>\r\n                            </div>\r\n                            <div className=\"project-card\">\r\n                                <div className=\"project-img js-stack-img\">\r\n                                    {/* <img src=\"{Logo}\" alt=\"image\"></ img> */}\r\n                                </div>\r\n                                <div className=\"project-name\">Shelf</div>\r\n                                <div className=\"project-desc\">Celebrity focussed E Commerce shopping application for web and mobile</div>\r\n                            </div>\r\n                            <div className=\"project-card\">\r\n                                <div className=\"project-img js-stack-img\">\r\n                                    {/* <img src=\"{Logo}\" alt=\"image\"></ img> */}\r\n                                </div>\r\n                                <div className=\"project-name\">Mathup</div>\r\n                                <div className=\"project-desc\">Mathematics Quiz application for school children</div>\r\n                            </div>\r\n                            <div className=\"project-card\">\r\n                                <div className=\"project-img\">\r\n                                    {/* <img src=\"{Logo}\" alt=\"image\"></ img> */}\r\n                                </div>\r\n                                <div className=\"project-name\">Analytics Dashboard</div>\r\n                                <div className=\"project-desc\">Data Visualisation through various types of charts</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, HashRouter, Link } from 'react-router-dom'\r\nimport contact from './components/contact'\r\nimport home from './components/home'\r\nimport projects from './components/projects';\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter basename=\"/\">\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light nav-width\">\r\n                <span className=\"navbar-brand nav-logo\"><span className=\"brand-logo\">Abhishek Harapanhalli</span></span>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav nav-items\">\r\n                            <li className=\"nav-item active\" >\r\n                                <Link className=\"link-color\" to=\"/home\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\"  >\r\n                                <Link className=\"link-color\" to=\"/projects\">Projects</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\" >\r\n                                <Link className=\"link-color\" to=\"/contact\">Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <Route exact path=\"/\" component={home}></Route>\r\n                <Route path=\"/contact\" component={contact}></Route>\r\n                <Route path=\"/home\" component={home}></Route>\r\n                <Route path=\"/projects\" component={projects}></Route>\r\n            </div>\r\n        </HashRouter>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}